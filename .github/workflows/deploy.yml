name: Deploy to EKS
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker image
      env:
        ECR_REGISTRY: 864981727549.dkr.ecr.ap-northeast-2.amazonaws.com
        ECR_REPOSITORY: fsbone-app
        IMAGE_TAG: ${{ github.sha }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        docker build \
          --build-arg DATABASE_URL="${DATABASE_URL}" \
          --build-arg POSTGRES_URL="${DATABASE_URL}" \
          --build-arg POSTGRES_PRISMA_URL="${DATABASE_URL}" \
          --build-arg POSTGRES_URL_NON_POOLING="${DATABASE_URL}" \
          --build-arg POSTGRES_USER="default" \
          --build-arg POSTGRES_HOST="ep-polished-water-a17o20lb-pooler.ap-southeast-1.aws.neon.tech" \
          --build-arg POSTGRES_PASSWORD="fIs4yN3tPvoH" \
          --build-arg POSTGRES_DATABASE="verceldb" \
          -t ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG} .
        docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name fsbone-cluster --region ap-northeast-2

    - name: Deploy to EKS
      env:
        ECR_REGISTRY: 864981727549.dkr.ecr.ap-northeast-2.amazonaws.com
        ECR_REPOSITORY: fsbone-app
        IMAGE_TAG: ${{ github.sha }}
      run: |
        kubectl set image deployment/fsbone-app fsbone-app=${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
